using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace musicapi.Migrations
{
    /// <inheritdoc />
    public partial class MigrationPermitirNulo : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.UpdateData(
                table: "Usuarios",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "SenhadHash", "SenhadSalt" },
                values: new object[] { new byte[] { 71, 56, 156, 185, 211, 206, 179, 73, 3, 224, 195, 217, 123, 77, 100, 55, 212, 137, 206, 187, 245, 167, 31, 142, 110, 140, 13, 96, 8, 46, 239, 169, 138, 122, 162, 53, 140, 69, 172, 94, 32, 158, 9, 187, 188, 209, 91, 181, 32, 209, 140, 233, 10, 43, 36, 178, 72, 158, 184, 215, 199, 92, 129, 109 }, new byte[] { 163, 64, 170, 49, 251, 48, 4, 191, 13, 205, 220, 55, 220, 183, 117, 155, 181, 107, 234, 90, 27, 201, 225, 253, 196, 210, 12, 44, 183, 171, 94, 69, 190, 220, 108, 67, 176, 231, 21, 127, 216, 35, 145, 218, 17, 137, 76, 100, 127, 5, 171, 165, 132, 206, 219, 139, 204, 39, 21, 0, 67, 71, 222, 213, 9, 147, 90, 17, 207, 212, 84, 133, 32, 197, 68, 149, 117, 230, 65, 82, 230, 61, 249, 192, 31, 166, 68, 8, 200, 108, 95, 103, 98, 176, 76, 108, 178, 225, 185, 65, 75, 180, 168, 142, 211, 58, 74, 100, 250, 161, 178, 118, 132, 97, 219, 238, 164, 19, 85, 205, 45, 114, 26, 226, 230, 182, 163, 164 } });
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.UpdateData(
                table: "Usuarios",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "SenhadHash", "SenhadSalt" },
                values: new object[] { new byte[] { 181, 215, 222, 86, 244, 44, 98, 113, 176, 238, 193, 202, 121, 222, 166, 241, 167, 162, 250, 114, 115, 144, 242, 165, 25, 8, 206, 186, 33, 9, 193, 225, 254, 238, 95, 18, 225, 124, 198, 216, 103, 41, 217, 244, 160, 153, 127, 176, 193, 245, 171, 155, 239, 63, 108, 40, 217, 208, 109, 228, 152, 172, 77, 132 }, new byte[] { 60, 168, 58, 171, 254, 198, 44, 101, 4, 108, 85, 106, 27, 146, 168, 236, 153, 141, 13, 24, 169, 192, 63, 163, 23, 36, 164, 82, 40, 159, 246, 48, 142, 157, 30, 149, 235, 61, 34, 82, 145, 67, 131, 6, 40, 62, 244, 127, 8, 14, 215, 192, 114, 175, 45, 172, 251, 136, 112, 238, 32, 151, 20, 149, 157, 153, 174, 181, 135, 125, 209, 138, 175, 8, 243, 133, 170, 164, 212, 221, 100, 8, 246, 203, 245, 58, 16, 8, 196, 146, 119, 71, 119, 219, 129, 78, 12, 24, 197, 138, 180, 191, 130, 41, 179, 234, 53, 3, 118, 195, 82, 49, 14, 175, 149, 27, 224, 118, 98, 252, 177, 168, 137, 185, 205, 172, 198, 183 } });
        }
    }
}
